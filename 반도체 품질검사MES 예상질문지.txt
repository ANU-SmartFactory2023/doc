예상 질문지


1. 프로젝트를 완료하는 데 소요된 일정과 협업 프로세스에 대해 설명해 주세요
프로젝트 진행에 필요한 업무분석과 문서화 작업을 구체화하여 작성하였기에 추후 일정관리가
수월하게 이뤄졌으며 문서화된 일정과 업무분담을 git과 카카오톡 단톡방을 이용하여 공유하여
문제발생시 담당업무자를 쉽게 파악할 수 있었습니다.

2. 어떻게 팀 간의 협업 및 업무분장이 이루어졌고, 어떤 도구를 사용했나요
- 공정별 기능을 분류하고 클래스화 하여 분담,작성하였고 한공정씩을 담당하여 main문을 작성하였습니다.
 클래스는 main문에 라이브러리 형식으로 참조되고 클래스에 문제가 있을 시 담당자에게 수정을 요청하여 분업을 이뤘습니다.
작업환경을 TortoiseGit을 활용해 shareFolder를 만들어 모두가 같은환경에서 작업하였습니다.

3. 주요 장애 사례와 그에 대한 대응 및 해결 과정을 설명해주세요
DB데이터를 그라파나와 연동하여 UI설계 시간을 단축하려 했으나 연동불가능으로 ASP.NET으로 구현하였습니다.
1개의 DC모터를 2개의 라즈베리파이로 제어하는 테스트에서 실패하여 원인을 추측하여 해결하려했으나
하드웨어적인 방법에서는 해결방안이 없었고 모터제어통신을 통해 해결하는 방법이 있었지만 프로젝트 지향성에 맞지 않았기에
1개의 DC모터를 1개의 라즈베리파이로 제어하고 전체 라즈베리파이 갯수를 2개로 줄였습니다.

4. 통신방식에 대해 설명해주세요
http통신을 사용하였습니다. 스트링형태의 텍스트를 매개체로 사용하는 방식은 예외처리어려움 ,높은 오류 발생율을 야기시킨다고 판단하여
클라이언트에서 보내는 #코드,데이터,메세지# 에 서버가 기준에 부합하는 답변을 해주는 http통신을 사용하였습니다.
post방식도 사용함
필요한 상황에 따라 답변을 기다리는 get형식의 통신 방식도 기용하였습니다.

5. http 통신에 대해 설명해주세요
- 텍스트 기반의 통신 규약으로 인터넷에서 데이터를 주고받을 수 있는 프로토콜

6. http 통신을 선택한 이유가 무엇인가요
- 서버 확장성이 높고, 무상태는 응답 서버를 쉽게 바꿀 수 있기 때문에 무한한 서버 증설이 가능하기 때문에

7. 서버는 무엇을 담당하나요 - 꼬리질문
- 각 공정별 동작기준,센서값 등급 기준을 지니고 있으며 공정에서 공정진행,레일동작,불량판별등의 명령요청을 받게되고 기준에 부합하는 답변으로 공정을 구동시킵니다.
또한, LOT ID를 부여하고 제품의 공정상 모든 데이터를 기록합니다.

8. 불량품 추적 및 분석을 어떻게 하나요
- 제품은 레일에 올라가게 되면 LOT ID를 부여받습니다. 각 공정별 센서값에 따른 등급이 LOT ID안에 기록이 되며
이를 통해 어떤공정에서 불량이 발생했는지 ,특정 공정의 불량율을 알 수 있습니다.

9. UI는 무엇을 기준으로 제작하였나요
- 사용자가 실시간으로 공정 진행정보를 확인할 수 있고 공정에서 발생하는 데이터들을 쉽게 찾아보는것에 집중하여 제작하였습니다.
10. UI는 어떤 기능을 가지고 있나요

11. 실시간 웨이퍼상태 및 공정데이터를 처리하고 응답하는데 어떤 방법을 사용하나요
- 센서가 동작할 때 서버에 POST 통신을 하는 구조로써 모든 공정의 상태를 서버에 전송합니다.

12. 데이터베이스 설계 기준은 어떻게 되나요 
- 제품 추척에 용이한 LOT ID의 기능을 초점에 두어 제작하였습니다. 공정별 소요시간, 공정 불량률, 제품 등급 등 
공정의 생산률,경제성에 영향을 미칠 수 있는 데이터요소들을 도식화 할 수 있는 구조로 설계하였습니다.


14. 포토공정,식각공정,EDS공정,EUV공정이 무엇인가요
- 포토공정 : 웨이퍼 위에 반도체 회로를 그려 넣는 과정
- 식각공정 : 그려진 회로에 따라 웨이퍼를 깎아내는과정
- EDS공정 : 깎여진 웨이퍼에 금속을 증착하게 되고 이를 전기신호로 검사하는 과정
- EUV공정 : 포토공정의 기법중 하나로 극자외선으로 회로패턴을 그려넣는 과정

15. 각 공정 센서들은 무엇을 기준으로 선정하셨나요
- 공정을 수행한 웨이퍼를 감지하고 판별기준을 만들 수 있는 요소를 특정 짓고 이에 부합한 센서들을 채택하였습니다.
EUV 공정의 경우 LED와 조도센서를 사용하기위해 채택한 공정입니다.

17. 라즈베리파이를 선택한 이유와 장점은 무엇이었나요
-아두이노보다 고성능이며 OpenCV 이미지 센서를 사용할 수 있는 것이 장점이고 Python코딩에 적합하다 판단하여서 채택하였습니다.

19. 불량품은 어떻게 처리하나요
- 각 공정에서 측정한 센서 값을 서버에서 판단하며 판별된 결과에 따라 서보모터를 구동하여 부착된 암으로 웨이퍼를 불량 바스켓으로 떨어뜨리거나 다음공정으로 진행하게 합니다.
 
20. 시스템이 어떻게 자동화된 결정을 내리고, 예외 상황에 어떻게 대응하는지 설명해 주세요
- 공정에서 발생하는 상황에 따른 행동 기준을 마련하여 결정과 예외상황을 규정짓고 이에 대응하는 방안을 대비하였습니다.
21. 등급은 어떻게 분류되나요
- LOT ID에 기록된 값을 토대로 등급이 매겨지며 이를 토대로 마지막 등급분류 서보모터가 동작합니다.

22. 새로운 기술이나 도구 도입 시에는 어떤 평가를 진행하셨나요.
- 프로그래밍의 구조를 해치지 않는지, 공정환경에 적합한지 등을 고려하여 도입하였습니다.
식각공정의 경우 기존에는 웨이퍼의 한군데 높이만 측정하는 것이었지만 식각이 잘 이뤄졌는지 확인하려면 연속적인 값으로 
식각상태를 확인해야한다 평가하여서 구동방식과 측정방식을 수정하였습니다.

향후개선사항
-보안
웹인터페이스 사용자개선-
윈도우 새창 새로고침시 화면 미출력 문제 -> 원인파악 및 개선 
데이터 시각화 개선- 
애니메이션 삽입
그라파나 연동문제 -> html로 그래프제작
이력추적 보고서 - 
공정이력을 추적하고 불량률이 높은 공정을 검토하여 대응하는 보고서를 작성하는기능
알림 및 경고 -
연속적인 불량이나 이상 상태를 감지하고 사용자에게 이메일이나 푸시알림등으로 신속하게 
알려주는 기능


총 제작비용은 얼마인가요 -50만원 상당,3D프린트 별개
